{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/protected": {
      "get": {
        "operationId": "AppController_getHello2",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "signUp",
        "summary": "Register",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "signIn",
        "summary": "Log In",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Get users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/api-keys": {
      "get": {
        "operationId": "getApiKeys",
        "summary": "Retrieve API Keys",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/generate-apikey": {
      "post": {
        "operationId": "generateApiKey",
        "summary": "Create API Key",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/connections/oauth/callback": {
      "get": {
        "operationId": "handleOAuthCallback",
        "summary": "Capture oAuth Callback",
        "parameters": [
          {
            "name": "state",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "location",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections"
        ]
      }
    },
    "/connections": {
      "get": {
        "operationId": "getConnections",
        "summary": "List Connections",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "connections"
        ]
      }
    },
    "/webhook": {
      "get": {
        "operationId": "getWebhooksMetadata",
        "summary": "Retrieve webhooks metadata ",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      },
      "post": {
        "operationId": "createWebhookMetadata",
        "summary": "Add webhook metadata",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/webhook/{id}": {
      "put": {
        "operationId": "updateWebhookStatus",
        "summary": "Update webhook status",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "webhook"
        ]
      }
    },
    "/linked-users/create": {
      "post": {
        "operationId": "addLinkedUser",
        "summary": "Add Linked User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLinkedUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/linked-users": {
      "get": {
        "operationId": "getLinkedUsers",
        "summary": "Retrieve Linked Users",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/linked-users/single": {
      "get": {
        "operationId": "getLinkedUser",
        "summary": "Retrieve a Linked User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "linked-users"
        ]
      }
    },
    "/organisations": {
      "get": {
        "operationId": "getOrganisations",
        "summary": "Retrieve Organisations",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/organisations/create": {
      "post": {
        "operationId": "createOrganisation",
        "summary": "Create an Organisation",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrganizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "organisations"
        ]
      }
    },
    "/projects": {
      "get": {
        "operationId": "getProjects",
        "summary": "Retrieve projects",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "projects"
        ]
      }
    },
    "/projects/create": {
      "post": {
        "operationId": "createProject",
        "summary": "Create a project",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "projects"
        ]
      }
    },
    "/field-mapping/entities": {
      "get": {
        "operationId": "getFieldMappingsEntities",
        "summary": "Retrieve field mapping entities",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/field-mapping/attribute": {
      "get": {
        "operationId": "getFieldMappings",
        "summary": "Retrieve field mappings",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/field-mapping/value": {
      "get": {
        "operationId": "getFieldMappingValues",
        "summary": "Retrieve field mappings values",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/field-mapping/define": {
      "post": {
        "operationId": "defineTargetField",
        "summary": "Define target Field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DefineTargetFieldDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/field-mapping/map": {
      "post": {
        "operationId": "mapField",
        "summary": "Map Custom Field",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MapFieldToProviderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/field-mapping/properties": {
      "get": {
        "operationId": "getCustomProviderProperties",
        "summary": "Retrieve Custom Properties",
        "parameters": [
          {
            "name": "linkedUserId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "providerId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "field-mapping"
        ]
      }
    },
    "/events": {
      "get": {
        "operationId": "getEvents",
        "summary": "Retrieve Events",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "events"
        ]
      }
    },
    "/magic-link/create": {
      "post": {
        "operationId": "createMagicLink",
        "summary": "Create a Magic Link",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMagicLinkDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "magic-link"
        ]
      }
    },
    "/magic-link": {
      "get": {
        "operationId": "getMagicLinks",
        "summary": "Retrieve Magic Links",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "magic-link"
        ]
      }
    },
    "/magic-link/single": {
      "get": {
        "operationId": "getMagicLink",
        "summary": "Retrieve a Magic Link",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "magic-link"
        ]
      }
    },
    "/passthrough": {
      "post": {
        "operationId": "passthroughRequest",
        "summary": "Make a passthrough request",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedUserId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassThroughRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassThroughResponse"
                }
              }
            }
          }
        },
        "tags": [
          "passthrough"
        ]
      }
    },
    "/crm/contact": {
      "get": {
        "operationId": "getContacts",
        "summary": "List a batch of CRM Contacts",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contact"
        ]
      },
      "post": {
        "operationId": "addContact",
        "summary": "Create CRM Contact",
        "description": "Create a contact in any supported CRM",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedContactInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contact"
        ]
      },
      "patch": {
        "operationId": "updateContact",
        "summary": "Update a CRM Contact",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crm/contact"
        ]
      }
    },
    "/crm/contact/{id}": {
      "get": {
        "operationId": "getContact",
        "summary": "Retrieve a CRM Contact",
        "description": "Retrieve a contact from any connected CRM",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `contact` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contact"
        ]
      }
    },
    "/crm/contact/batch": {
      "post": {
        "operationId": "addContacts",
        "summary": "Add a batch of CRM Contacts",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original CRM software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedContactInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "crm/contact"
        ]
      }
    },
    "/crm/deal": {
      "get": {
        "operationId": "getDeals",
        "summary": "List a batch of Deals",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedUserId",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crm/deal"
        ]
      },
      "post": {
        "operationId": "addDeal",
        "summary": "Create a Deal",
        "description": "Create a deal in any supported Crm software",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "header",
            "description": "The integration ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedUserId",
            "required": true,
            "in": "header",
            "description": "The linked user ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedDealInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crm/deal"
        ]
      },
      "patch": {
        "operationId": "updateDeal",
        "summary": "Update a Deal",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crm/deal"
        ]
      }
    },
    "/crm/deal/{id}": {
      "get": {
        "operationId": "getDeal",
        "summary": "Retrieve a Deal",
        "description": "Retrieve a deal from any connected Crm software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the  you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "crm/deal"
        ]
      }
    },
    "/crm/deal/batch": {
      "post": {
        "operationId": "addDeals",
        "summary": "Add a batch of Deals",
        "parameters": [
          {
            "name": "integrationId",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "linkedUserId",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Crm software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedDealInput"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "crm/deal"
        ]
      }
    },
    "/ticketing/ticket": {
      "get": {
        "operationId": "getTickets",
        "summary": "List a batch of Tickets",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/ticket"
        ]
      },
      "post": {
        "operationId": "addTicket",
        "summary": "Create a Ticket",
        "description": "Create a ticket in any supported Ticketing software",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedTicketInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/ticket"
        ]
      },
      "patch": {
        "operationId": "updateTicket",
        "summary": "Update a Ticket",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ticketing/ticket"
        ]
      }
    },
    "/ticketing/ticket/{id}": {
      "get": {
        "operationId": "getTicket",
        "summary": "Retrieve a Ticket",
        "description": "Retrieve a ticket from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `ticket` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/ticket"
        ]
      }
    },
    "/ticketing/ticket/batch": {
      "post": {
        "operationId": "addTickets",
        "summary": "Add a batch of Tickets",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedTicketInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTicketOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/ticket"
        ]
      }
    },
    "/ticketing/comment": {
      "get": {
        "operationId": "getComments",
        "summary": "List a batch of Comments",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comment"
        ]
      },
      "post": {
        "operationId": "addComment",
        "summary": "Create a Comment",
        "description": "Create a comment in any supported Ticketing software",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedCommentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comment"
        ]
      }
    },
    "/ticketing/comment/{id}": {
      "get": {
        "operationId": "getComment",
        "summary": "Retrieve a Comment",
        "description": "Retrieve a comment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the `comment` you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comment"
        ]
      }
    },
    "/ticketing/comment/batch": {
      "post": {
        "operationId": "addComments",
        "summary": "Add a batch of Comments",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedCommentInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedCommentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/comment"
        ]
      }
    },
    "/ticketing/user": {
      "get": {
        "operationId": "getUsers",
        "summary": "List a batch of Users",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/user"
        ]
      }
    },
    "/ticketing/user/{id}": {
      "get": {
        "operationId": "getUser",
        "summary": "Retrieve a User",
        "description": "Retrieve a user from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the user you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedUserOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/user"
        ]
      }
    },
    "/ticketing/attachment": {
      "get": {
        "operationId": "getAttachments",
        "summary": "List a batch of Attachments",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachment"
        ]
      },
      "post": {
        "operationId": "addAttachment",
        "summary": "Create a Attachment",
        "description": "Create a attachment in any supported Ticketing software",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnifiedAttachmentInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachment"
        ]
      }
    },
    "/ticketing/attachment/{id}": {
      "get": {
        "operationId": "getAttachment",
        "summary": "Retrieve a Attachment",
        "description": "Retrieve a attachment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the attachment you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachment"
        ]
      }
    },
    "/ticketing/attachment/{id}/download": {
      "get": {
        "operationId": "downloadAttachment",
        "summary": "Download a Attachment",
        "description": "Download a attachment from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the attachment you want to retrive.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachment"
        ]
      }
    },
    "/ticketing/attachment/batch": {
      "post": {
        "operationId": "addAttachments",
        "summary": "Add a batch of Attachments",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UnifiedAttachmentInput"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAttachmentOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/attachment"
        ]
      }
    },
    "/ticketing/contact": {
      "get": {
        "operationId": "getContacts",
        "summary": "List a batch of Contacts",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/contact"
        ]
      }
    },
    "/ticketing/contact/{id}": {
      "get": {
        "operationId": "getContact",
        "summary": "Retrieve a Contact",
        "description": "Retrieve a contact from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the contact you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedContactOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/contact"
        ]
      }
    },
    "/ticketing/account": {
      "get": {
        "operationId": "getAccounts",
        "summary": "List a batch of Accounts",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAccountOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/account"
        ]
      }
    },
    "/ticketing/account/{id}": {
      "get": {
        "operationId": "getAccount",
        "summary": "Retrieve an Account",
        "description": "Retrieve an account from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the account you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedAccountOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/account"
        ]
      }
    },
    "/ticketing/tag": {
      "get": {
        "operationId": "getTags",
        "summary": "List a batch of Tags",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTagOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tag"
        ]
      }
    },
    "/ticketing/tag/{id}": {
      "get": {
        "operationId": "getTag",
        "summary": "Retrieve a Tag",
        "description": "Retrieve a tag from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the tag you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTagOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/tag"
        ]
      }
    },
    "/ticketing/team": {
      "get": {
        "operationId": "getTeams",
        "summary": "List a batch of Teams",
        "parameters": [
          {
            "name": "connection_token",
            "required": true,
            "in": "header",
            "description": "The connection token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTeamOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/team"
        ]
      }
    },
    "/ticketing/team/{id}": {
      "get": {
        "operationId": "getTeam",
        "summary": "Retrieve a Team",
        "description": "Retrieve a team from any connected Ticketing software",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "id of the team you want to retrieve.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remote_data",
            "required": false,
            "in": "query",
            "description": "Set to true to include data from the original Ticketing software.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/ApiResponse"
                    },
                    {
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/UnifiedTeamOutput"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "ticketing/team"
        ]
      }
    }
  },
  "info": {
    "title": "Unified Panora API",
    "description": "The Panora API description",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          },
          "id_organisation": {
            "type": "string"
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email",
          "password_hash"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "id_user": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          }
        },
        "required": [
          "password_hash"
        ]
      },
      "ApiKeyDto": {
        "type": "object",
        "properties": {
          "projectId": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "keyName": {
            "type": "string"
          }
        },
        "required": [
          "projectId",
          "userId",
          "keyName"
        ]
      },
      "WebhookDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          },
          "scope": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "url",
          "id_project",
          "scope"
        ]
      },
      "CreateLinkedUserDto": {
        "type": "object",
        "properties": {
          "linked_user_origin_id": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          }
        },
        "required": [
          "linked_user_origin_id",
          "alias",
          "id_project"
        ]
      },
      "CreateOrganizationDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "stripe_customer_id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "stripe_customer_id"
        ]
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id_organization": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id_organization"
        ]
      },
      "DefineTargetFieldDto": {
        "type": "object",
        "properties": {
          "object_type_owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "data_type": {
            "type": "string"
          }
        },
        "required": [
          "object_type_owner",
          "name",
          "description",
          "data_type"
        ]
      },
      "MapFieldToProviderDto": {
        "type": "object",
        "properties": {
          "attributeId": {
            "type": "string"
          },
          "source_custom_field_id": {
            "type": "string"
          },
          "source_provider": {
            "type": "string"
          },
          "linked_user_id": {
            "type": "string"
          }
        },
        "required": [
          "attributeId",
          "source_custom_field_id",
          "source_provider",
          "linked_user_id"
        ]
      },
      "CreateMagicLinkDto": {
        "type": "object",
        "properties": {
          "linked_user_origin_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "alias": {
            "type": "string"
          },
          "id_project": {
            "type": "string"
          }
        },
        "required": [
          "linked_user_origin_id",
          "email",
          "alias",
          "id_project"
        ]
      },
      "PassThroughRequestDto": {
        "type": "object",
        "properties": {
          "method": {
            "enum": [
              "GET",
              "POST",
              "PATCH",
              "DELETE",
              "PUT"
            ],
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "headers": {
            "type": "object"
          }
        },
        "required": [
          "method",
          "path"
        ]
      },
      "PassThroughResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "status": {
            "type": "number"
          },
          "data": {
            "type": "object"
          }
        },
        "required": [
          "url",
          "status",
          "data"
        ]
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "statusCode": {
            "type": "number"
          }
        },
        "required": [
          "statusCode"
        ]
      },
      "Email": {
        "type": "object",
        "properties": {
          "email_address": {
            "type": "string",
            "description": "The email address of a contact"
          },
          "email_address_type": {
            "type": "string",
            "description": "The email address type of a contact"
          },
          "owner_type": {
            "type": "string",
            "description": "The owner type of a the email tied to the contact"
          }
        },
        "required": [
          "email_address",
          "email_address_type"
        ]
      },
      "Phone": {
        "type": "object",
        "properties": {
          "phone_number": {
            "type": "string",
            "description": "The phone number of a contact"
          },
          "phone_type": {
            "type": "string",
            "description": "The phone type of a contact"
          },
          "owner_type": {
            "type": "string"
          }
        },
        "required": [
          "phone_number",
          "phone_type"
        ]
      },
      "UnifiedContactOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the contact"
          },
          "email_address": {
            "type": "string",
            "description": "The email address of the contact"
          },
          "phone_number": {
            "type": "string",
            "description": "The phone number of the contact"
          },
          "details": {
            "type": "string",
            "description": "The details of the contact"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the contact"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the contact in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "email_address",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedContactInput": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "The first name of the contact"
          },
          "last_name": {
            "type": "string",
            "description": "The last name of the contact"
          },
          "email_addresses": {
            "description": "The email addresses of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Email"
            }
          },
          "phone_numbers": {
            "description": "The phone numbers of the contact",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Phone"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "first_name",
          "last_name",
          "email_addresses",
          "phone_numbers",
          "field_mappings"
        ]
      },
      "UnifiedDealInput": {
        "type": "object",
        "properties": {}
      },
      "UnifiedTicketOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ticket"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket"
          },
          "description": {
            "description": "The description of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket is due"
          },
          "type": {
            "type": "string",
            "description": "The type of the ticket"
          },
          "parent_ticket": {
            "type": "string",
            "description": "The uuid of the parent ticket"
          },
          "tags": {
            "description": "The tags names of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "completed_at": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket has been completed"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the ticket"
          },
          "assigned_to": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "account_id": {
            "type": "string",
            "description": "The uuid of the account which the ticket belongs to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the ticket belongs to"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the ticket"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the ticket in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTicketInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the ticket"
          },
          "status": {
            "type": "string",
            "description": "The status of the ticket"
          },
          "description": {
            "description": "The description of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "due_date": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket is due"
          },
          "type": {
            "type": "string",
            "description": "The type of the ticket"
          },
          "parent_ticket": {
            "type": "string",
            "description": "The uuid of the parent ticket"
          },
          "tags": {
            "description": "The tags names of the ticket",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "completed_at": {
            "format": "date-time",
            "type": "string",
            "description": "The date the ticket has been completed"
          },
          "priority": {
            "type": "string",
            "description": "The priority of the ticket"
          },
          "assigned_to": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "comment": {
            "description": "The users uuids the ticket is assigned to",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "account_id": {
            "type": "string",
            "description": "The uuid of the account which the ticket belongs to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the ticket belongs to"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "description",
          "field_mappings"
        ]
      },
      "UnifiedAttachmentOutput": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The file name of the attachment"
          },
          "file_url": {
            "type": "string",
            "description": "The file url of the attachment"
          },
          "uploader": {
            "type": "string",
            "description": "The uploader's uuid of the attachment"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the attachment"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the attachment in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "file_name",
          "file_url",
          "uploader",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedCommentOutput": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The body of the comment"
          },
          "html_body": {
            "type": "string",
            "description": "The html body of the comment"
          },
          "is_private": {
            "type": "boolean",
            "description": "The public status of the comment"
          },
          "creator_type": {
            "type": "string",
            "description": "The creator type of the comment (either user or contact)"
          },
          "ticket_id": {
            "type": "string",
            "description": "The uuid of the ticket the comment is tied to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the comment belongs to (if no user_id specified)"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user which the comment belongs to (if no contact_id specified)"
          },
          "attachments": {
            "description": "The attachemnets tied to the comment",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedAttachmentOutput"
            }
          },
          "id": {
            "type": "string",
            "description": "The uuid of the comment"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the comment in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "body",
          "remote_data"
        ]
      },
      "UnifiedCommentInput": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The body of the comment"
          },
          "html_body": {
            "type": "string",
            "description": "The html body of the comment"
          },
          "is_private": {
            "type": "boolean",
            "description": "The public status of the comment"
          },
          "creator_type": {
            "type": "string",
            "description": "The creator type of the comment (either user or contact)"
          },
          "ticket_id": {
            "type": "string",
            "description": "The uuid of the ticket the comment is tied to"
          },
          "contact_id": {
            "type": "string",
            "description": "The uuid of the contact which the comment belongs to (if no user_id specified)"
          },
          "user_id": {
            "type": "string",
            "description": "The uuid of the user which the comment belongs to (if no contact_id specified)"
          },
          "attachments": {
            "description": "The attachements uuids tied to the comment",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "body"
        ]
      },
      "UnifiedUserOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the user"
          },
          "email_address": {
            "type": "string",
            "description": "The email address of the user"
          },
          "teams": {
            "description": "The teams whose the user is part of",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the user"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the user in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "email_address",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedAttachmentInput": {
        "type": "object",
        "properties": {
          "file_name": {
            "type": "string",
            "description": "The file name of the attachment"
          },
          "file_url": {
            "type": "string",
            "description": "The file url of the attachment"
          },
          "uploader": {
            "type": "string",
            "description": "The uploader's uuid of the attachment"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "file_name",
          "file_url",
          "uploader",
          "field_mappings"
        ]
      },
      "UnifiedAccountOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the account"
          },
          "domains": {
            "description": "The domains of the account",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the account"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the account in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTagOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the tag"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the tag"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the tag in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      },
      "UnifiedTeamOutput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the team"
          },
          "description": {
            "type": "string",
            "description": "The description of the team"
          },
          "field_mappings": {
            "type": "object",
            "properties": {}
          },
          "id": {
            "type": "string",
            "description": "The uuid of the team"
          },
          "remote_id": {
            "type": "string",
            "description": "The id of the team in the context of the 3rd Party"
          },
          "remote_data": {
            "type": "object",
            "properties": {}
          }
        },
        "required": [
          "name",
          "field_mappings",
          "remote_data"
        ]
      }
    }
  }
}