name: panora
version: '3.8'

networks:
  frontend:
  backend:

services:
  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
      - ./packages/api/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  api:
    build:
      context: ./
      dockerfile: ./packages/api/Dockerfile
    environment: 
        DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?ssl=false
        DISTRIBUTION: ${DISTRIBUTION}
        JWT_SECRET: ${JWT_SECRET}
        REDIS_HOST: redis
    restart:
      unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - postgres
    networks:
      - backend
  
  redis:
    image: "redis:7.2.3-alpine"
    container_name: "Redis"
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data

  docs:
    build:
      context: ./
      dockerfile: ./docs/Dockerfile
    restart:
      always
    ports:
      - 5000:3000
  
  webapp:
    build:
      dockerfile: ./apps/webapp/Dockerfile
      context: ./
      args:
        VITE_BACKEND_DOMAIN: ${VITE_BACKEND_DOMAIN}
        VITE_FRONTEND_DOMAIN: ${VITE_FRONTEND_DOMAIN}
    restart:
      unless-stopped
    ports:
      - 80:80
    depends_on:
      - api
    networks:
      - backend
      - frontend
